{"version":3,"sources":["types/postTypes.js","config/index.js","actions/postActions.js","components/PostsIndex/index.js","components/PostsNew/index.js","routes.js","reducers/postReducers.js","reducers/index.js","store.js","components/App.js","index.js"],"names":["POST_TYPES","FETCH_POSTS","require","config","isDevelop","process","ENVIRONMENT","DEVELOP","REDUXBLOG_API_BASE_URL","REDUXBLOG_API_KEY","fetchPosts","request","axios","get","type","payload","PostsIndex","this","props","className","to","Component","connect","dispatch","bindActionCreators","postActions","PostsNew","Routes","history","createBrowserHistory","path","component","exact","INITIAL_STATE","all","post","postReducers","state","action","data","rootReducer","combineReducers","posts","store","applyMiddleware","promise","createStore","createStoreWithMiddleware","reducers","App","children","ReactDOM","render","document","querySelector"],"mappings":"oPAIeA,EAJI,CACfC,YAAa,eCDjBC,EAAQ,IAAUC,SAElB,IAAMC,EAAwC,YAA5BC,uMAAYC,YAQfH,EAPA,CACXG,YAAaD,uMAAYC,YACzBC,QAASH,EACTI,uBAAwBH,GACxBI,kBAAmBJ,ICKR,GACXK,WATe,WACf,IAAMC,EAAUC,IAAMC,IAAN,UAAaV,EAAOK,uBAApB,0BAA4DL,EAAOM,oBACpF,MAAQ,CACPK,KAAMd,EAAWC,YACjBc,QAASJ,K,OCHPK,E,wKACJ,WACEC,KAAKC,MAAMR,e,oBAEb,WACE,OACE,gCACE,qBAAKS,UAAU,qBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,kCAAhC,8BAJR,6B,GANmBE,aA0BVC,kBAAQ,MAJvB,SAA4BC,GAC1B,OAAOC,YAAmB,CAAEd,WAAYe,EAAYf,YAAca,KAGrDD,CAAkCN,GCvBlCU,E,4JALb,WACE,OAAO,kD,GAFYL,aCURM,EAPA,kBACb,eAAC,IAAD,CAAQC,QAASC,IAAjB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWf,EAAYgB,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWL,EAAUM,OAAK,Q,yBCPjDC,EAAgB,CACpBC,IAAK,GACLC,KAAM,MAeOC,EAZM,WAA0C,IAAhCC,EAA+B,uDAAvBJ,EAAeK,EAAQ,uCAC5D,OAAQA,EAAOxB,MACb,KAAKd,EAAWC,YACd,OAAO,2BACFoC,GADL,IAEEH,IAAKI,EAAOvB,QAAQwB,OAExB,QACE,OAAOF,ICREG,EAJKC,YAAgB,CAClCC,MAAON,ICKMO,EAJmBC,YAAgBC,IAAhBD,CAAyBE,IAE7CC,CAA0BC,GCMzBC,E,4JATX,WACI,OACI,qBAAK9B,UAAU,eAAf,SACKF,KAAKC,MAAMgC,e,GAJV7B,aCMlB8B,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACI,cAAC,EAAD,UACE,cAAC,EAAD,QAGNU,SAASC,cAAc,Y","file":"static/js/main.08ff524b.chunk.js","sourcesContent":["const POST_TYPES = {\n    FETCH_POSTS: 'FETCH_POSTS'\n}\n\nexport default POST_TYPES;","require('dotenv').config();\n\nconst isDevelop = process.env.ENVIRONMENT === 'develop';\nconst config = {\n    ENVIRONMENT: process.env.ENVIRONMENT,\n    DEVELOP: isDevelop,\n    REDUXBLOG_API_BASE_URL: process.env.REACT_APP_REDUXBLOG_API_BASE_URL,\n    REDUXBLOG_API_KEY: process.env.REACT_APP_REDUXBLOG_API_KEY\n};\n\nexport default config;","import axios from 'axios';\nimport { POST_TYPES } from '../types';\nimport config from '../config';\n\nconst fetchPosts = () => {\n    const request = axios.get(`${config.REDUXBLOG_API_BASE_URL}/api/posts?key=${config.REDUXBLOG_API_KEY}`);\n   return  {\n    type: POST_TYPES.FETCH_POSTS,\n    payload: request\n   };\n};\n\nexport default {\n    fetchPosts\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Link } from 'react-router-dom';\nimport { postActions } from \"../../actions\";\nclass PostsIndex extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"ui one column grid\">\n          <div className=\"row\">\n            <div className=\"sixteen wide column\">\n              <Link to=\"/posts/new\" className=\"ui right floated primary button\">\n                  Add a Post\n              </Link>\n            </div>\n          </div>\n        </div>\n        List of blog posts.\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchPosts: postActions.fetchPosts }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(PostsIndex);\n","import React, { Component } from \"react\";\n\nclass PostsNew extends Component {\n  render() {\n    return <div>Create From</div>;\n  }\n}\n\nexport default PostsNew;\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport PostsIndex from './components/PostsIndex';\nimport PostsNew from './components/PostsNew';\n\nconst Routes = () => (\n  <Router history={createBrowserHistory}>\n    <Route path=\"/\" component={PostsIndex} exact />\n    <Route path=\"/posts/new\" component={PostsNew} exact />\n  </Router>\n);\n\nexport default Routes;\n","import { POST_TYPES } from \"../types\";\nconst INITIAL_STATE = {\n  all: [],\n  post: null,\n};\n\nconst postReducers = function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case POST_TYPES.FETCH_POSTS:\n      return {\n        ...state,\n        all: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducers;\n","import { combineReducers } from \"redux\";\nimport postReducers from \"./postReducers\";\nconst rootReducer = combineReducers({\n  posts: postReducers,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise';\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nconst store = createStoreWithMiddleware(reducers);\n\nexport default store;","import React, { Component } from 'react';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"ui container\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Routes from './routes';\nimport store from \"./store\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App>\n        <Routes />\n      </App>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}