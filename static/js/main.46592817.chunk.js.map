{"version":3,"sources":["components/PostsIndex/index.js","routes.js","types/postTypes.js","reducers/postReducers.js","reducers/index.js","store.js","components/App.js","index.js"],"names":["PostsIndex","console","log","Component","Routes","history","createBrowserHistory","path","component","POST_TYPES","FETCH_POSTS","INITIAL_STATE","all","post","postReducers","state","action","type","payload","data","rootReducer","combineReducers","posts","store","applyMiddleware","promise","createStore","createStoreWithMiddleware","reducers","App","className","this","props","children","ReactDOM","render","document","querySelector"],"mappings":"mOAaeA,E,wKAVb,WACEC,QAAQC,IACN,wE,oBAGJ,WACE,OAAO,0D,GAPcC,aCQVC,EANA,kBACb,cAAC,IAAD,CAAQC,QAASC,IAAjB,SACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWR,O,iCCFhBS,EAJI,CACfC,YAAa,eCAXC,EAAgB,CACpBC,IAAK,GACLC,KAAM,MAeOC,EAZM,WAA0C,IAAhCC,EAA+B,uDAAvBJ,EAAeK,EAAQ,uCAC5D,OAAQA,EAAOC,MACb,KAAKR,EAAWC,YACd,OAAO,2BACFK,GADL,IAEEH,IAAKI,EAAOE,QAAQC,OAExB,QACE,OAAOJ,ICREK,EAJKC,YAAgB,CAClCC,MAAOR,ICKMS,EAJmBC,YAAgBC,IAAhBD,CAAyBE,IAE7CC,CAA0BC,GCMzBC,E,4JATX,WACI,OACI,qBAAKC,UAAU,eAAf,SACKC,KAAKC,MAAMC,e,GAJV9B,aCMlB+B,IAASC,OACP,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACI,cAAC,EAAD,UACE,cAAC,EAAD,QAGNa,SAASC,cAAc,Y","file":"static/js/main.46592817.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass PostsIndex extends Component {\n  componentWillMount() {\n    console.log(\n      \"This would be a good time to call an action creator to fetch posts\"\n    );\n  }\n  render() {\n    return <div>List of blog posts.</div>;\n  }\n}\n\nexport default PostsIndex;\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport PostsIndex from './components/PostsIndex';\n\nconst Routes = () => (\n  <Router history={createBrowserHistory}>\n    <Route path=\"/\" component={PostsIndex} />\n  </Router>\n);\n\nexport default Routes;\n","const POST_TYPES = {\n    FETCH_POSTS: 'FETCH_POSTS'\n}\n\nexport default POST_TYPES;","import { POST_TYPES } from \"../types\";\nconst INITIAL_STATE = {\n  all: [],\n  post: null,\n};\n\nconst postReducers = function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case POST_TYPES.FETCH_POSTS:\n      return {\n        ...state,\n        all: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducers;\n","import { combineReducers } from \"redux\";\nimport postReducers from \"./postReducers\";\nconst rootReducer = combineReducers({\n  posts: postReducers,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise';\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nconst store = createStoreWithMiddleware(reducers);\n\nexport default store;","import React, { Component } from 'react';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"ui container\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Routes from './routes';\nimport store from \"./store\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App>\n        <Routes />\n      </App>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}